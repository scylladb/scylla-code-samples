// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Sensor sensor
//
// swagger:model Sensor
type Sensor struct {

	// pet id
	// Required: true
	// Format: uuid
	PetID *strfmt.UUID `json:"pet_id"`

	// sensor id
	// Required: true
	// Format: uuid
	SensorID *strfmt.UUID `json:"sensor_id"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this sensor
func (m *Sensor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePetID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSensorID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Sensor) validatePetID(formats strfmt.Registry) error {

	if err := validate.Required("pet_id", "body", m.PetID); err != nil {
		return err
	}

	if err := validate.FormatOf("pet_id", "body", "uuid", m.PetID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Sensor) validateSensorID(formats strfmt.Registry) error {

	if err := validate.Required("sensor_id", "body", m.SensorID); err != nil {
		return err
	}

	if err := validate.FormatOf("sensor_id", "body", "uuid", m.SensorID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Sensor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Sensor) UnmarshalBinary(b []byte) error {
	var res Sensor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
