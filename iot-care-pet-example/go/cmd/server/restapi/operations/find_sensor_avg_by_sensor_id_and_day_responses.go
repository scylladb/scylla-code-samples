// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/scylladb/scylla-code-samples/iot-care-pet-example/go/cmd/server/models"
)

// FindSensorAvgBySensorIDAndDayOKCode is the HTTP code returned for type FindSensorAvgBySensorIDAndDayOK
const FindSensorAvgBySensorIDAndDayOKCode int = 200

/*FindSensorAvgBySensorIDAndDayOK sensor avg response

swagger:response findSensorAvgBySensorIdAndDayOK
*/
type FindSensorAvgBySensorIDAndDayOK struct {

	/*
	  In: Body
	*/
	Payload []float32 `json:"body,omitempty"`
}

// NewFindSensorAvgBySensorIDAndDayOK creates FindSensorAvgBySensorIDAndDayOK with default headers values
func NewFindSensorAvgBySensorIDAndDayOK() *FindSensorAvgBySensorIDAndDayOK {

	return &FindSensorAvgBySensorIDAndDayOK{}
}

// WithPayload adds the payload to the find sensor avg by sensor Id and day o k response
func (o *FindSensorAvgBySensorIDAndDayOK) WithPayload(payload []float32) *FindSensorAvgBySensorIDAndDayOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find sensor avg by sensor Id and day o k response
func (o *FindSensorAvgBySensorIDAndDayOK) SetPayload(payload []float32) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindSensorAvgBySensorIDAndDayOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]float32, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*FindSensorAvgBySensorIDAndDayDefault error

swagger:response findSensorAvgBySensorIdAndDayDefault
*/
type FindSensorAvgBySensorIDAndDayDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindSensorAvgBySensorIDAndDayDefault creates FindSensorAvgBySensorIDAndDayDefault with default headers values
func NewFindSensorAvgBySensorIDAndDayDefault(code int) *FindSensorAvgBySensorIDAndDayDefault {
	if code <= 0 {
		code = 500
	}

	return &FindSensorAvgBySensorIDAndDayDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find sensor avg by sensor id and day default response
func (o *FindSensorAvgBySensorIDAndDayDefault) WithStatusCode(code int) *FindSensorAvgBySensorIDAndDayDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find sensor avg by sensor id and day default response
func (o *FindSensorAvgBySensorIDAndDayDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find sensor avg by sensor id and day default response
func (o *FindSensorAvgBySensorIDAndDayDefault) WithPayload(payload *models.Error) *FindSensorAvgBySensorIDAndDayDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find sensor avg by sensor id and day default response
func (o *FindSensorAvgBySensorIDAndDayDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindSensorAvgBySensorIDAndDayDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
