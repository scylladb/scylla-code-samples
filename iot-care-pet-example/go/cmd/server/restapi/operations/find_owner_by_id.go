// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FindOwnerByIDHandlerFunc turns a function with the right signature into a find owner by id handler
type FindOwnerByIDHandlerFunc func(FindOwnerByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindOwnerByIDHandlerFunc) Handle(params FindOwnerByIDParams) middleware.Responder {
	return fn(params)
}

// FindOwnerByIDHandler interface for that can handle valid find owner by id params
type FindOwnerByIDHandler interface {
	Handle(FindOwnerByIDParams) middleware.Responder
}

// NewFindOwnerByID creates a new http.Handler for the find owner by id operation
func NewFindOwnerByID(ctx *middleware.Context, handler FindOwnerByIDHandler) *FindOwnerByID {
	return &FindOwnerByID{Context: ctx, Handler: handler}
}

/*FindOwnerByID swagger:route GET /owner/{id} findOwnerById

Find an owner with a specific ID

*/
type FindOwnerByID struct {
	Context *middleware.Context
	Handler FindOwnerByIDHandler
}

func (o *FindOwnerByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewFindOwnerByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
